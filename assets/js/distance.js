"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[257],{146:function(t,e,s){s.r(e);var i=s(692),n=s(796),r=s(603);const a={offset:[0,0],center:[!0,!0]},c={offset:"array",center:"array"};class h extends i.Z{constructor(t,e){super(t,e),this._isUpdating=!1,this._target=n.Z.getElementFromSelector(this._element),this._x=0,this._y=0,this.constructor.instances.push(this),this.constructor.isObserving}static get NAME(){return"distance"}static get Default(){return a}static get DefaultType(){return c}static observe(){this.observer=new MutationObserver((()=>{this.instances.forEach((t=>t.update()))})),this.observer.observe(document.body,{attributes:!0,childList:!0,subtree:!0})}update(){if(this._isUpdating||!(0,r.pn)(this._element))return;if(this._target=n.Z.getElementFromSelector(this._element),!this._target)return;this._isUpdating=!0;const{x:t,y:e}=this._calculateDistance();t!==this._x||e!==this._y?(this._setProperties(t,e),this._isUpdating=!1):this._isUpdating=!1}_calculateDistance(){var t,e,s,i;const n=this._element.getBoundingClientRect(),r=this._target.getBoundingClientRect(),a=null!=(t=parseFloat(this._config.offset[0]))?t:0,c=null!=(e=parseFloat(this._config.offset[1]))?e:a,h=null==(s=this._config.center[0])||s,o=null!=(i=this._config.center[1])?i:h;return{x:Math.round(r.x-n.x+a+(h?this._target.offsetWidth/2:0)),y:Math.round(r.y-n.y+c+(o?this._target.offsetHeight/2:0))}}_setProperties(t,e){this._x=t,this._y=e,this._element.style.setProperty("--distance-x",`${t}px`),this._element.style.setProperty("--distance-y",`${e}px`)}}h.instances=[],h.isObserving=!1;for(const t of n.Z.find("[data-sd-distance]"))h.getOrCreateInstance(t).update();e.default=h}}]);